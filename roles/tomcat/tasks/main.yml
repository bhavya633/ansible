---
- name: create floders for apps
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
    - "{{ APP_SETUP_DIR }}"
    - "{{ TOMCAT_APP_DIR }}"
    - "{{ JAVA_HOME_DIR }}"
- name: download java and tomcat
  get_url:
    url: "{{ item }}"
    dest: "{{ APP_SETUP_DIR }}"
  with_items:
    - "{{ TOMCAT_URL }}"
    - "{{ JAVA_URL }}"
- name: extracting java tar
  unarchive:
    src: "{{ APP_SETUP_DIR }}/{{ JAVA_ZIP_FILE }}"
    dest: "{{ JAVA_HOME_DIR }}"
    remote_src: "{{ IS_REMOTE_IS_REMOTE }}"
    extra_opts: 
      - --strip-components=1
- name: extracting tomcat
  unarchive:
    src: "{{ APP_SETUP_DIR }}/{{ TOMCAT_ZIP_FILE }}"
    dest: "{{ TOMCAT_APP_DIR }}"
    remote_src: "{{ IS_REMOTE_IS_REMOTE }}"
    extra_opts:
      - --strip-components=1

- name: create group
  group: name=tomcat

- name: create user tomcat
  user: name=tomcat group=tomcat

- name: change ownership
  file:
    dest: "{{ TOMCAT_APP_DIR }}"
    state: directory
    owner: tomcat
    group: tomcat
    recurse: yes

- name: copy tomcat users
  template:
    src: "context.xml"
    dest: "{{ TOMCAT_APP_DIR }}/conf/tomcat-user.xml"

- name: copy tomcat context file
  template:
    src: "context.xml"
    dest: "{{ TOMCAT_APP_DIR }}/webapps/manager/META-INF/context.xml"

- name: copy tomcat server config
  template:
    src: "server.xml"
    dest: "{{ TOMCAT_APP_DIR }}/config/server.xml"

- name: copy tomcat service file
  template:
    src: "tomcat.yml"
    dest: "/etc/systemd/system/tomcat.service"
  notify:
    - start-tomcat
    
- name: coping war file
  copy:
    src: "{{ APP_WAR_FILE }}"
    dest: "{{ TOMCAT_APP_DIR }}/webapps/"
  notify:
    - restart-tomcat
